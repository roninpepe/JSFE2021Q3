export type eventCallback = (event: Event) => void;

export interface eventHandler {
  handleEvent: eventCallback;
}

function $(selector: string, scope: HTMLElement | Document = document): HTMLElement {
  return <HTMLElement>scope.querySelector(selector);
}

export function EventCallbackBuilder(callback: eventCallback, className?: string) {
  const handler: eventHandler = {
    handleEvent: function (event: Event) {
      if (className) {
        if (event.target && (event.target as Element).classList.contains(className)) {
          callback(event);
        }
      } else {
        callback(event);
      }
    },
  };
  return handler;
}

export function toggleArrayItem<T>(array: Array<T>, value: T) {
  const index: number = array.indexOf(value);
  if (index === -1) {
    array.push(value);
  } else {
    array.splice(index, 1);
  }
}

export function selfAssessment(): void {
  console.log(`Score: 200/200

- [x] Страница с игрушками содержит карточки всех игрушек а также фильтры, строку поиска, поле для сортировки. Выполняются [требования к вёрстке](christmas-task.md#требования-к-вёрстке) (10)

- [x] Карточка игрушки содержит её изображение, название, текстом или условным значком обозначено количество экземпляров, год покупки, форма, цвет, размер, является ли игрушка любимой (10)

- [x] Добавление игрушек в избранное (20)
  - [x] кликая по карточке с игрушкой или по кнопке на ней игрушку можно добавлять в избранное или удалять из избранного. Карточки добавленных в избранное игрушек внешне отличаются от остальных (10)
  - [x] на странице отображается количество добавленных в избранное игрушек. При попытке добавить в избранное больше 20 игрушек, выводится всплывающее уведомление с текстом "Извините, все слоты заполнены" (10)

- [x] Сортировка (20)
   Сортируются только те игрушки, которые в данный момент отображаются на странице
  - [x] сортировка игрушек по названию в возрастающем и спадающем порядке (10)
  - [x] сортировка игрушек по году их приобретения в возрастающем и спадающем порядке (10)

- [x] Фильтры в указанном диапазоне от и до (30)
  - [x] фильтры по количеству экземпляров (10)
  - [x] фильтры по году покупки (10)
  - [x] для фильтрации в указанном диапазоне используется range slider с двумя ползунками. При перемещении ползунков отображается их текущее значение, разный цвет слайдера до и после ползунка (10)
   Range slider можно создать на основе input[type=range] - [пример](https://ru.stackoverflow.com/questions/1025336/Два-бегунка-у-input-с-типом-range) или использовать для этой цели библиотеку [noUiSlider](https://refreshless.com/nouislider/), или другую на ваш выбор.

- [x] Фильтры по значению (30)
   Выбранные фильтры выделяются стилем.
  - [x] фильтры по форме (5)
  - [x] фильтры по цвету (5)
  - [x] фильтры по размеру (5)
  - [x] можно отобразить только любимые игрушки (5)
  - [x] можно отфильтровать игрушки по нескольким фильтрам одного типа (10)
   Для нескольких фильтров одного типа отображаются игрушки, которые соответствуют хоть одному выбранному фильтру. Например, можно отобразить снежинки и колокольчики; или белые, синие и красные игрушки; или большие и средние.

- [x] Можно отфильтровать игрушки по нескольким фильтрам разного типа (20)
   Для нескольких фильтров разного типа отображаются только те игрушки, которые соответствуют всем выбранным фильтрам.
   Например, можно отобразить только синие шары. Или любимые белые и красные игрушки купленные в 1940-1960 годах.
   Если игрушек, соответствующих всем выбранным фильтрам нет, на странице выводится уведомление в человекочитаемом формате, например, "Извините, совпадений не обнаружено".

- [x] Сброс фильтров (20)
  - [x] есть кнопка reset для сброса фильтров (10)
   Кнопка reset сбрасывает только фильтры, не влияя на порядок сортировки или игрушки, добавленные в избранное.  
   После использования кнопки reset фильтры остаются работоспособными
  - [x] при сбросе фильтров кнопкой reset, ползунки range slider сдвигаются к краям, значения ползунков возвращаются к первоначальным, range slider закрашивается одним цветом (10)

- [x] Сохранение настроек в local storage (10)
  - [x] выбранные пользователем фильтры, порядок сортировки, добавленные в избранное игрушки сохраняются при перезагрузке страницы. Есть кнопка сброса настроек, которая очищает local storage (10)

- [x] Поиск (30)
  - [x] при открытии приложения курсор находится в поле поиска (2)
  - [x] автозаполнение поля поиска отключено (нет выпадающего списка с предыдущими запросами) (2)
  - [x] есть placeholder (2)
  - [x] в поле поиска есть крестик, позволяющий очистить поле поиска (2)
  - [x] если нет совпадения последовательности букв в поисковом запросе с названием игрушки, выводится уведомление в человекочитаемом формате, например "Извините, совпадений не обнаружено" (2)
  - [x] при вводе поискового запроса на странице остаются только те игрушки, в которых есть указанные в поиске буквы в указанном порядке. При этом не обязательно, чтобы буквы были в начале слова. Регистр символов при поиске не учитывается (10)
   Поиск ведётся только среди игрушек, которые в данный момент отображаются на странице.
  - [x] если очистить поле поиска, на странице отображаются игрушки, соответствующие всем выбранным фильтрам и настройкам сортировки (10)

- [ ] Дополнительный функционал на выбор (0)
  - [ ] в процессе сортировки, фильтрации, поиска карточки с изображениями игрушек плавно меняют своё положение (0)
  - [ ] очень высокое качество оформления приложения + дополнительный, не указанный в задании, сложный в реализации функционал, улучшающий качество приложения, удобство пользования им (0)

================================================================

Score: 200/200

- [x] Репозиторий (20)
  - [x] pull request выполнен в соответствии с [требованиями](https://docs.rs.school/#/pull-request-review-process?id=Требования-к-pull-request-pr) (10)
  - [x] ведётся история коммитов, названия коммитов даются согласно [гайдлайну](https://docs.rs.school/#/git-convention) (10)

- [x] Качество кода (150)
  - [x] приложение написано на TypeScript (100)
    - [x] используется Everyday Types (10)
    - [x] используются Generics (10)
    - [x] использование Object Types (10)
    - [x] использование Classes (10)
    - [x] использование Function (10)
    - [x] нигде не используется тип Any (10)
    - [x] ESLinter настроен на TypeScript (используется плагин typescript-eslint/recommended) и отсутствуют ошибки (10)
    - [x] В конфигурационном файле TypeScript стоят флаги "noImplicitAny": true и "strict": true (20)
    - [x] webpack настроен и работает с TypeScript (10)
  - [x] код разбит на модули (10)
  - [x] карточки игрушек добавляются динамически средствами JavaScript 10
  - [x] у ментора нет замечаний к качеству кода, либо все замечания ментора исправлены (30)

- [x] Оформление и функционал приложения (30)
  - [x] у ментора нет замечаний к внешнему виду и функционалу приложения, либо все замечания ментора исправлены (30)`);
}

export default $;
