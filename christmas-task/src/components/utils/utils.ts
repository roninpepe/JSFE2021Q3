export type eventCallback = (event: Event) => void;

export interface eventHandler {
  handleEvent: eventCallback;
}

function $(selector: string, scope: HTMLElement | Document = document): HTMLElement {
  return <HTMLElement>scope.querySelector(selector);
}

export function EventCallbackBuilder(callback: eventCallback, className?: string) {
  const handler: eventHandler = {
    handleEvent: function (event: Event) {
      if (className) {
        if (event.target && (event.target as Element).classList.contains(className)) {
          callback(event);
        }
      } else {
        callback(event);
      }
    },
  };
  return handler;
}

export function toggleArrayItem<T>(array: Array<T>, value: T) {
  const index: number = array.indexOf(value);
  if (index === -1) {
    array.push(value);
  } else {
    array.splice(index, 1);
  }
}

export function selfAssessment(): void {
  console.log(`С наступающим!

Score: 200/200

- [x] Вёрстка страниц приложения и навигация между ними (30)
  - [x] стартовая страница содержит название приложения и кнопку "Начать игру" или аналогичную. Выполняются [требования к вёрстке](christmas-task.md#требования-к-вёрстке) (10)
  - [x] на странице с ёлкой есть меню с настройками, слоты с добавленными в избранное игрушками, ёлка. Выполняются [требования к вёрстке](christmas-task.md#требования-к-вёрстке) (10)
  - [x] в header приложения есть навигация, которая позволяет с каждой страницы приложения перейти на две другие страницы (10)

- [x] Меню с настройками (50)
   У пользователя есть возможность:
  - [x] выбрать один из нескольких (минимум 8) фонов (10)
  - [x] выбрать одну из нескольких (минимум 4) ёлок (10)
  - [x] включить/отключить падающий снег (10)
  - [x] включить/отключить новогоднюю музыку (10)
  - [x] выбранные настройки сохраняются в local storage и отображаются при перезагрузке страницы. Если музыка сохранилась включённой, она начинает играть при первом клике. Есть кнопка сброса настроек, которая очищает local storage (10)

- [x] Гирлянда (40)
   Гирлянда реализуется средствами css без использования изображений
   Гирлянда на ёлку добавляется динамически средствами JavaScript (на кросс-чеке этот пункт не проверяется)
   У пользователя есть возможность:
  - [x] добавить на ёлку мерцающую разноцветную гирлянду (20)
  - [x] выбрать один из нескольких (минимум 4) цветов лампочек гирлянды или оставить её разноцветной (10)
  - [x] внешний вид гирлянды соответствует предложенному образцу или является его улучшенной версией (10)

- [x] Игрушки в избранном (80)
  - [x] в слотах находятся игрушки, которые были добавлены в избранное на странице с игрушками (10)
  - [x] если в избранное не была добавлена ни одна игрушка, в слотах отображаются первые 20 игрушек коллекции исходных данных (10)
  - [x] игрушки  из слотов с игрушками можно перетянуть на ёлку используя drag and drop (10)
  - [x] если в процессе перетягивания игрушку отпускают за пределами ёлки, она возвращается в свой слот (10)
  - [x] повешенные на ёлку игрушки можно перетягивать в пределах ёлки (10)
  - [x] повешенные на ёлку игрушки можно снимать с ёлки, при этом они возвращаются в свой слот (10)
  - [x] возле слота с каждой игрушкой указывается количество игрушек в слоте равное количеству экземпляров игрушки в массиве с исходными данными (10)
  - [x] когда игрушку "вешают на ёлку" количество игрушек в слоте уменьшается, когда игрушку "снимают с ёлки", количество игрушек в слоте увеличивается, когда все экземпляры игрушки помещаются на ёлку, отображается пустой слот (10)

- [ ] Дополнительный функционал на выбор (0)
  - [ ] есть кнопка "Сохранить" при клике по которой текущее состояние страницы с ёлкой сохраняется в local storage, изображение ёлки с размещёнными на ней игрушками добавляется в секцию "Вы нарядили". При клике по карточкам из этой секции восстанавливается состояние страницы с ёлкой на момент сохранения (0)
  - [ ] очень высокое качество оформления приложения + дополнительный, не указанный в задании, сложный в реализации функционал, улучшающий качество приложения, удобство пользования им (0)

================================================================

Score: 200/200

- [x] Репозиторий (20)
  - [x] pull request выполнен в соответствии с [требованиями](https://docs.rs.school/#/pull-request-review-process?id=Требования-к-pull-request-pr) (10)
  - [x] ведётся история коммитов, названия коммитов даются согласно [гайдлайну](https://docs.rs.school/#/git-convention) (10)

- [x] Качество кода (150)
  - [x] приложение написано на TypeScript (100)
    - [x] используется Everyday Types (10)
    - [x] используются Generics (10)
    - [x] использование Object Types (10)
    - [x] использование Classes (10)
    - [x] использование Function (10)
    - [x] нигде не используется тип Any (10)
    - [x] ESLinter настроен на TypeScript (используется плагин typescript-eslint/recommended) и отсутствуют ошибки (10)
    - [x] В конфигурационном файле TypeScript стоят флаги "noImplicitAny": true и "strict": true (20)
    - [x] webpack настроен и работает с TypeScript (10)
  - [x] код разбит на модули (10)
  - [x] карточки игрушек добавляются динамически средствами JavaScript 10
  - [x] у ментора нет замечаний к качеству кода, либо все замечания ментора исправлены (30)

- [x] Оформление и функционал приложения (30)
  - [x] у ментора нет замечаний к внешнему виду и функционалу приложения, либо все замечания ментора исправлены (30)`);
}

export default $;
